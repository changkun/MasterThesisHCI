%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 403.000000 353.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.2 (Build 18C54) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 403 353
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 403 353
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /slash put
dup 34 /a put
dup 35 /o put
dup 36 /u put
dup 37 /t put
dup 38 /c put
dup 39 /d put
dup 40 /g put
dup 41 /l put
dup 42 /w put
dup 43 /s put
dup 44 /e put
dup 45 /h put
dup 46 /r put
dup 47 /p put
dup 48 /i put
dup 49 /m put
dup 50 /z put
dup 51 /n put
dup 52 /x put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<






00>] def
/CharStrings 22 dict dup begin
/.notdef 0 def
/slash 1 def
/a 2 def
/c 3 def
/d 4 def
/e 5 def
/g 6 def
/h 7 def
/i 8 def
/l 9 def
/m 10 def
/n 11 def
/o 12 def
/p 13 def
/r 14 def
/s 15 def
/t 16 def
/u 17 def
/w 18 def
/x 19 def
/z 20 def
/uni2B91 21 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec




58042602784D4EE521160AFDF57DF312A0DB7A04BCAE670F8376B5D0176FAC87FD8FDD397E1E501BD25005D19C64E10FBE61347E87C6E2220938469218E7CC9338FEF65130A806764319CA45AEB44855B0FEC9A0434FB71791A1C4041FAEE7965DC4897B9AEF20D5F467DCCDE448EE4AD3E54FD6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /d put
dup 34 /i put
dup 35 /s put
dup 36 /t put
dup 37 /r put
dup 38 /a put
dup 39 /c put
dup 40 /o put
dup 41 /n put
dup 42 /p put
dup 43 /g put
dup 44 /e put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<


15141E023332363701A50C1C2F23212F1F0E0D1D3023232E1D0C02878E0218532E3956391D1D39583A3351190104203C2F1C1D2F3C1E203B2E1C1C2D3BE24202CAFEFC26272D4A613436644D2D252A000002001DFFF30224021300080022003FBA0009001400032BB8000910B80001D000BA0020001900032BB8002010BA000F000600032BB8000F10BA0001000900032BB8000110B8001910B8001DDC303101233E033332160721362E0223220E0215141E0233323637230E012322260192E7010B1B2D223433DD0175041C3F62423B6146262544623D587C1E7D073E2B3C40013A0F26221738903C6E56332A49643A3C644827505D182B3E00000000020026FF3D022702130013003A00D1B8003B2FBA0014002A00032BB8001410B8003B10B80020D0B800202FB80005DC411B0006000500160005002600050036000500460005005600050066000500760005008600050096000500A6000500B6000500C60005000D5D410500D5000500E5000500025DB8002A10B8000FD0B8002A10B80016D0B8002A10B80018D0B800182FB8002A10B80028D0B800282F00BA002D003600032BB8002D10BA001B000A00032BB8001B10BA0000002500032BB8000010BA0018000A001B111239BA002900250000111239B8003610B80030DC303125222E0235343E0233321E0215140E0217112315232E0123220E0215141E02333236373315160623222627231E0333323E020127212C1B0B0D1D2B1E232E1C0C0F1E2EE287021A4D333653381D1936543A2F55170201373C263A0A8D032B414F26596A38117A1C2C371C1D3529181A2C39201C3328185901E4452D262A475D32355F472927294437481F282C3F2813304550000002003A000000C802CA000300070037BA0001000200032BB8000110B8000210B80004D0B8000110B80006D0B8000110B80009DC00B800052FBA0001000000032BB800011030311335231D01113311C88E8E0255757550FDFB020500000100360000021B02130016004DBA0016000000032BB8001610BA000C000900032BB8000C10B8001610B80002D0B800022FB8000C10B80018DC00B800012FB8000A2FBA0011000600032BB8001110BA001500060011111239303113113311343633321615113311342E02232206072335368E343A33288E112A49392D561B030205FDFB010F4F453F40FEDC013E304F371F292D4800000000020026FFF3023D02130013002700CBB800282FB800292FB8002810B80014D0B800142FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8002910B8001EDCB8000ADC410500DA000A00EA000A00025D411B0009000A0019000A0029000A0039000A004900
0A0059000A0069000A0079000A0089000A0099000A00A9000A00B9000A00C9000A000D5D00BA000F001900032BB8000F10BA0023000500032BB8002310303113343E0233321E0215140E0223222E0227141E0233323E0235342E0223220E02B40C1D302424311D0C0C1D312424301D0C8E2646623D3D6346262646633D3D62462601021F3C2E1D1D2E3C1F1F3B2F1C1C2F3B1F3E6447262647643E3E654727274765000000020036FF4B024402130013002A00BFB8002C2FBA0017001500032BB8001710B80005D0B800052FB8002C10B80020DCB8000FDC410500DA000F00EA000F00025D411B0009000F0019000F0029000F0039000F0049000F0059000F0069000F0079000F0089000F0099000F00A9000F00B9000F00C9000F000D5DB8001710B80028D0B800282FBA002900150017111239B8001710B8002AD0B8002A2F00B800152FBA0025000A00032BB8002510BA0000001B00032BB8000010BA0018001B0000111239BA0029000A0025111239303125222E0235343E0233321E0215140E0201113335331E0133323E0235342E02232206072335013B22301D0D0C1D2F23222F1E0D0C1D2FFED88E021A51303955391C1C3A583D30501A025D1C2D3C1F203C2E1D1D2F3C1F1F3C2D1C01A8FD46F526272C4A603437654C2E262A42000001003600000183021300150031BA0015000000032BB8001510B80002D0B800022F00B800012FBA000E000800032BB8000E10BA00140008000E111239303113113335343E0233321617352623220E02072335368E0E2136270D1C0A110E1B322C220A020205FDFBE9233C2D1A03028405101D29186000000001001DFFF301FC02130039006DBA0000000100032BBA001E001D00032BB8001E10B8001D10B8000BDCBA002800010000111239B800282FB80015DCB8001D10B80030D0B800302FB8001E10B8003BDC00BA0035000600032BB8003510BA0023001A00032BB8002310B8000610B80000DCB8002310B8001DDC303137231E0333323E0235342E02272E0335343E0233321617332E0323220E0215141E02171E0115140E0223222E02A487022B43562D2C5542291C2E3B1F1E3A2D1C10171C0C2638038704293E4F2A2A5040271C2E3B1F4C55121B210F15271E13A834452A12112A45332431211407070C0F181310130A031D29303F26100F254032222F1F130710202013190F070A1521000000010006FFFB015202A000190053BA0001000200032BB8000110B8000210B80006D0B8000110B80016D000B800012FBA0013000C00032BB8001310BA0004000500032BB8000410B80000D0B8000C10B8000FD0B8000F2FB8000510B80017D030311335231523153311141E0233323637350E0123222635113335EA8E56561A2D3B21152C120A160C24186802059B9B5FFECF27301A0902036E020218

00>] def
/CharStrings 15 dict dup begin
/.notdef 0 def
/a 1 def
/c 2 def
/d 3 def
/e 4 def
/g 5 def
/i 6 def
/n 7 def
/o 8 def
/p 9 def
/r 10 def
/s 11 def
/t 12 def
/uni2B90 13 def
/uni2B91 14 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1018 -481 1437 1141}def
/UniqueID 4037426 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B1454491BCF48412CA40CE1C5F7851A403FDB5F7EBECD00BD59442330258C8F54F9A2B51CA7958F3DB6C92B40A9ABD8BCABC6503E435EF82F1DDF15531D31705CF43C678E4EC999123CED0D8064AC0F42E58C31CBBB5FAB10BA215ACAFCD0D3AD66033D159F3187A708F98A4ECF424CC83E2B284C2F0CC18AB153041B72FE2604E60D4C3EB071C4E42CFA6279AA1AE37693745759B386BBCDDA63ECE0F0B021167377DBC2AABB1129F7E6FFD7BA259383A685AEAA21EC6027D744D17DB783DBC87FD770C2DDB2250C41F23CDFA24429B2A61C8E097FA926116BE26101631EAA7C68500620E3F22B05E0C03CCE0978130BFABD52516A7CF6B22A31CA47AEB860642A8C46E9EF769B369D8FBBB2A232F5F819E7D496E04CC9A4AB5603835EB73ADB7AFD4965F84103279D673F71A264BBCA7D7BF10FDF982709AB56C5FAAA1C596936BEDF74EFF816F6871FFFE467D4DC7CD66508E40A8B04A62A16E20FD9440567DE7F2A9088EFB0B3464B6F493E601B5DA972BC28F613ACE5C1E6903F1777BB49E51279E5EBC3E07F3C794FE6844EB3E9069D3DEA09618DBA85AA25B32BE74EAC52C9F148CDF5ACF4BEDD83A7C033C06EB5C700C4B74FFA3810E26A825FC3C58B13E80AF819D7E726D8A32C5DA2445158204369E5C0E352E346C10FE82B5078C89FDEB05E62276419302429453368B4594C7368770BE38A07220D8B3910CA3FFD462B515AB0C83B204CBB031175286D39658478C26F12CF1E332212F2E9153A0

57406E3BA3686ED63251002C93B8BB351F2C952C60F2C704E069C0B492D53CEC033B4189DFE33B4D4586966B96945D529AD789E3972710464F77036F669FAFB8FFFEF2650DA416EA5214C7E19DB2D5208D25F19F3172F8CAC6EE04B98B664439669CE49F15CB2F98BD10A440AD0108D7329B3F3CD35E94848ECC553ABBC8B51ECD192BE26D03A3327BF43B13C832F31DB50022688FB11B53AD00F5EF037DBDFC7B95C9EB30EB587370294F1526E9E7FFB642D4956936166E557F64D538C1AEBAF0A6AFEFCCAEA1FD2FE71729D0541AA996C1054CC514AA84C33AF3CC68A63E2D7979AE91ED9C91AD690D88EB0E2E597EF722ED46E4788845584E909FF356EF092A93B132A3EDCB7A7127BB3BA712DB6639EE1BF60253D22E771DF5454482E63388A58C517B4DF640446DBD4E7C5F70122039B5866316529AB90EC43964C3789BB7ECFC1E1BE9F520960597D6F3C142DA4A59BD5CF8A8A3B4429F5E1F5D3CD1F34722BF42E1C13D62BE62635006EA47AB579F0EB4F11C311A858EDDBD9D675A0B5D4FB19A932FC9D3076B03810879524181BD1E23C00CE1D1A991F433C2B5DD0E6CB7A6D0755AB440079DEE7C02D0136BCD7D78F6E31CA1DA1541DFFA2E813FD7208CF6602A08038202EBAB7D249BAA1EDF7F6920ADB4E6AE8E300238D583118A449C5AB09BF710AF86BF0BA5A202B029FCE2AE3EAD6F42C633E88594045359383F77A4F21F6E055EB0F7DF8E10971B6850612254583C5B433D44BB946173CBEBF12299186E130C6C63A81273533B1BA1CC57AE926ECAB36CE8CC0E03AE7BF2499CA811B921674372D0011B112FC5927C9FCB88C05BFDD54419820C26E6A9BD1BE6FDAA8BA323CA1D4688703070C0378E0372CCCF20CC64691AD540DE59624FA26A5AEAC8AED33753E0787CFB40B31851BAD2ACCFA3AACAEEC416781E3B5470EFB6E55D52CD340D9C37CBE96011A47552BA75C6185992E069DFB790265CC291AE1F9FE42B44268B0E9F7A876DD549C419B9C14A03928BE4A4E17774B92749749F33CEEBA488A39F89686A965D625426B4C70F345FD62B23E6429E8E2720D3C774F827B5C3357F501357AE9AAE4DF4A27B94139C6749B3CFE89DD77F29A80C91DA1D01E1756CF615BF4091E4288008567F9F600F72CFB9B550F87E45124E825933966E64E10D16A8392CFE322DE9097BD7B8FA388C64F1B372C2611C610081609A1467448D265AB6DC84A2942E9C630F3FD5FD6368E6C74604098C2E3667767971EC79C37CC3B2AE187A0F74A8F0CA4F9AB115D31212B8527DFDA53F52A415B7E9071E51E17AED0B95E0F8753448358DB516EA23ED041F36FBDF541F6953E875C927423B93830C7F86C1EB10C04858CF0884395689BF9FE494884DCF6B158F9FE634F9D584BB0A632A653CD33A2E0C3CFA93ED3900CFB2DBA0D012DA224ED57E5B
A79FCB1F06685CDBD0040F91744DFDDB461D020E023C243E03813F0C2C43EAD2F295D269DACEABEF1987113FD06210F0329EBA584FAC5ADEE810A5AED2D37912EDFB72EAACC4771BE77EC0A98436DC9AFB438AF7D8B8CC8A6BB37FC90017DDF35EE90A2A880B41D8D2028507F63A6059B8723EC7E1F0DA2A7FB7C64A733B9D10B6FBA3A4099524F30AC7FC223F0889E71E42A058CF233FF8304CEA5FAB384AC56C737DE66289BF02852D78D3FE14BAC8D2165141F40C19A3047E4F34A270043E2D698928523E9B00E01CF0B1FE4A836FC7A0FDDDD16D36521E4752AAA4A41D1C1B146911C80A15A2AC3C68B5D9F6C12D0DECE4E5ABBF313236465DD00B5DA963CC851CD1CA010B6AE0B28E2CA1A0A70F687C4272E5498487514301ACE2A2FA450ABEA793837C06542D8093A3C26C8CFFFEB9F773BEDEF92D61EB1DD29DDF3523E151A403985CB9EE3965558E76AA8BE9CF723D3384DE810B509DF04698743B8D829AD608547354CFD66185C8DA6CAC7FF26467A5E011C3C0E980CDDDBDEDB89911D7DEEC72C9841F4453957F9D62B0BFC684825DDD350D0B2CE02BA86C3178A3C0CDBE488F95D9B8E3E219CE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F2.1/HelveticaNeue-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 403 353 rc
1 0 0 -1 -2023 1002 cm
2240.5396 714.64038 m
2252.0601 726.16083 2252.0601 744.83917 2240.5396 756.35962 c
2229.0193 767.88013 2210.3408 767.88013 2198.8203 756.35962 c
2187.2998 744.83917 2187.2998 726.16083 2198.8203 714.64038 c
2210.3408 703.11987 2229.0193 703.11987 2240.5396 714.64038 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 196.67999 266.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-2.664 5.776001 m
(!)s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -2023 1002 cm
2184.3596 811.64038 m
2195.8801 823.16083 2195.8801 841.83917 2184.3596 853.35962 c
2172.8391 864.88013 2154.1609 864.88013 2142.6404 853.35962 c
2131.1199 841.83917 2131.1199 823.16083 2142.6404 811.64038 c
2154.1609 800.11987 2172.8391 800.11987 2184.3596 811.64038 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 140.5 169.5 cm
-6.96 5.776001 m
(!")[ 5.328000 0.000000 ] xS
Q
8 w
q
105.09962 93.359627 m
116.62015 81.839172 116.62015 63.160831 105.09962 51.640373 c
93.57917 40.119858 74.900833 40.119858 63.380371 51.640373 c
51.859856 63.160831 51.859856 81.839172 63.380371 93.359627 c
74.900833 104.88014 93.57917 104.88014 105.09962 93.359627 c
W
0 0 403 353 rc
1 0 0 -1 -2023 1002 cm
2128.0996 908.64038 m
2139.6201 920.16083 2139.6201 938.83917 2128.0996 950.35962 c
2116.5791 961.88013 2097.9009 961.88013 2086.3804 950.35962 c
2074.8599 938.83917 2074.8599 920.16083 2086.3804 908.64038 c
2097.9009 897.11987 2116.5791 897.11987 2128.0996 908.64038 c
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 403 353 rc
1 0 0 -1 84.239998 72.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-14.224 5.776001 m
(!#$%)[ 5.328000 9.184000 8.896000 0.000000 ] xS
1 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -2023 1002 cm
2240.5396 908.64038 m
2252.0601 920.16083 2252.0601 938.83917 2240.5396 950.35962 c
2229.0193 961.88013 2210.3408 961.88013 2198.8203 950.35962 c
2187.2998 938.83917 2187.2998 920.16083 2198.8203 908.64038 c
2210.3408 897.11987 2229.0193 897.11987 2240.5396 908.64038 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 196.67999 72.5 cm
-13.92 5.776001 m
(!"!&)[ 5.328000 8.592000 5.328000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -2023 1002 cm
2352.9797 908.64038 m
2364.5002 920.16083 2364.5002 938.83917 2352.9797 950.35962 c
2341.4592 961.88013 2322.7808 961.88013 2311.2603 950.35962 c
2299.7397 938.83917 2299.7397 920.16083 2311.2603 908.64038 c
2322.7808 897.11987 2341.4592 897.11987 2352.9797 908.64038 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 309.12 72.5 cm
-14.368 5.776001 m
(!"!')[ 5.328000 8.592000 5.328000 0.000000 ] xS
3 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -2023 1002 cm
2302.3596 811.64038 m
2313.8801 823.16083 2313.8801 841.83917 2302.3596 853.35962 c
2290.8391 864.88013 2272.1609 864.88013 2260.6404 853.35962 c
2249.1199 841.83917 2249.1199 823.16083 2260.6404 811.64038 c
2272.1609 800.11987 2290.8391 800.11987 2302.3596 811.64038 c
S
1.5 w
/Cs3 SC
1 1 1 sc
2302.3596 811.64038 m
2313.8801 823.16083 2313.8801 841.83917 2302.3596 853.35962 c
2290.8391 864.88013 2272.1609 864.88013 2260.6404 853.35962 c
2249.1199 841.83917 2249.1199 823.16083 2260.6404 811.64038 c
2272.1609 800.11987 2290.8391 800.11987 2302.3596 811.64038 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 258.5 169.5 cm
-17.92 5.776001 m
(!\(#"\))[ 5.328000 9.184000 9.184000 8.592000 0.000000 ] xS
1 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -2023 1002 cm
2204.8914 761.03387 m
2183.2502 798.39929 l
S
0 i
CM
156.24083 196.67799 m
162.84631 202.09717 l
157.65427 205.10428 l
h
156.24083 196.67799 m
f
0 J
0 j
1 0 0 -1 -2023 1002 cm
2179.2407 805.32202 m
2185.8464 799.90283 l
2180.6543 796.89575 l
h
2179.2407 805.32202 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
2148.6956 858.02472 m
2127.0112 895.4115 l
S
0 i
CM
99.997597 99.668266 m
106.60643 105.08336 l
101.41624 108.09367 l
h
99.997597 99.668266 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2023 1002 cm
2122.9976 902.33173 m
2129.6064 896.91663 l
2124.4163 893.90631 l
h
2122.9976 902.33173 m
S
1 J
1 j
0.60000002 i
2249.1799 929.5 m
2292.72 929.5 l
S
0 i
CM
277.71997 72.5 m
269.71997 75.5 l
269.71997 69.5 l
h
277.71997 72.5 m
f
0 J
0 j
1 0 0 -1 -2023 1002 cm
2300.72 929.5 m
2292.72 926.5 l
2292.72 932.5 l
h
2300.72 929.5 m
S
1 J
1 j
0.60000002 i
2235.5381 760.38251 m
2259.5149 798.0036 l
S
0 i
CM
240.81438 197.25 m
239.04468 205.60872 l
233.98489 202.38402 l
h
240.81438 197.25 m
f
0 J
0 j
1 0 0 -1 -2023 1002 cm
2263.8145 804.75 m
2262.0447 796.3913 l
2256.9849 799.61597 l
h
2263.8145 804.75 m
S
1 J
1 j
0.60000002 i
2178.2886 858.03387 m
2199.9297 895.39929 l
S
0 i
CM
180.93918 99.678001 m
179.52573 108.10428 l
174.33368 105.09718 l
h
180.93918 99.678001 m
f
0 J
0 j
1 0 0 -1 -2023 1002 cm
2203.9392 902.32202 m
2202.5256 893.89575 l
2197.3337 896.90283 l
h
2203.9392 902.32202 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
2098.1091 901.44208 m
2095.8328 888.89233 2095.7522 874.20874 2102.8333 862 c
2108.1089 852.90411 2116.5386 846.59766 2125.4563 842.23059 c
S
0 i
CM
109.84339 162.84698 m
101.30492 162.53963 l
103.6124 157.00107 l
h
109.84339 162.84698 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2023 1002 cm
2132.8435 839.15302 m
2124.3049 839.46039 l
2126.6123 844.9989 l
h
2132.8435 839.15302 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
2156.0122 803.96118 m
2154.4504 791.51843 2155.019 777.05316 2162 765 c
2166.873 756.58636 2174.1689 750.55939 2181.9473 746.24634 c
S
0 i
CM
166.18983 259.15442 m
157.67332 258.46973 l
160.22351 253.03864 l
h
166.18983 259.15442 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2023 1002 cm
2189.1899 742.84558 m
2180.6733 743.53027 l
2183.2234 748.96136 l
h
2189.1899 742.84558 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
2311.1831 950.2821 m
2300.7183 958.41486 2287.2273 965.83331 2272.8333 965.83331 c
2263.0984 965.83331 2254.3491 962.44 2246.8926 957.72736 c
S
0 i
CM
217.45462 49.013378 m
222.11768 41.85405 l
225.67538 46.685478 l
h
217.45462 49.013378 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2023 1002 cm
2240.4546 952.98663 m
2245.1177 960.14594 l
2248.6753 955.31451 l
h
2240.4546 952.98663 m
S
2 w
1 J
1 j
[
8
8
] 0 d
0.60000002 i
/Cs3 SC
0.13725491 0.36862746 0 sc
2341.5361 901.53619 m
2342.3193 893.08167 2341.2954 883.50854 2336.3333 874 c
2332.3152 866.30017 2326.2439 859.65717 2319.5854 854.08319 c
S
0 i
CM
288.85815 153.60852 m
294.45267 145.01659 l
298.72269 150.81372 l
h
288.85815 153.60852 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2023 1002 cm
2311.8582 848.39148 m
2317.4526 856.9834 l
2321.7227 851.18628 l
h
2311.8582 848.39148 m
S
/Cs2 SC
0 sc
1 0 0 -1 102.5 235 cm
/F1.1[ 13 0 0 -13 0 0]sf
-21.059999 4.3180008 m
(*"+%,')[ 9.854000 6.981000 6.500000 4.095000 6.981000 0.000000 ] xS
1 0 0 -1 45.5 141 cm
-21.059999 4.3180008 m
(*"+%,')[ 9.854000 6.981000 6.500000 4.095000 6.981000 0.000000 ] xS
1 0 0 -1 258.5 18 cm
-21.059999 4.3180008 m
(*"+%,')[ 9.854000 6.981000 6.500000 4.095000 6.981000 0.000000 ] xS
/Cs3 SC
0.13725491 0.36862746 0 sc
1 0 0 -1 362 126.5 cm
-23.959 -3.3639984 m
(+-#.%&$%)[ 6.500000 7.228000 7.462000 4.329000 4.095000 6.981000 7.228000 0.000000 ] xS
-35.509499 12 m
(#/%0102"%0#3)[ 7.462000 7.709000 4.095000 2.886000 11.089000 2.886000 6.240000 6.981000 4.095000 2.886000 7.462000 0.000000 ] xS
/Cs2 SC
0 sc
1 0 0 -1 38.5 21.5 cm
/F2.1[ 13 0 0 -13 0 0]sf
-33.2085 -3.3770905 m
(!"#$%&'$"\(\))[ 7.943000 3.354000 6.981000 4.576000 5.057000 7.462000 7.462000 4.576000 3.354000 7.943000 0.000000 ] xS
-15.405 13 m
(*&+,)[ 7.943000 7.462000 7.943000 0.000000 ] xS
1 0 0 -1 138 332.5 cm
/F1.1[ 13 0 0 -13 0 0]sf
-21.788 -3.3639984 m
(+%".%03\()[ 6.500000 4.095000 6.981000 4.329000 4.095000 2.886000 7.228000 0.000000 ] xS
-14.5665 12 m
(/"\(,)[ 7.709000 6.981000 7.462000 0.000000 ] xS
1 0 0 -1 309.12 191.5 cm
-19.136 -3.3639984 m
(,40%03\()[ 6.981000 6.734000 2.886000 4.095000 2.886000 7.228000 0.000000 ] xS
-14.5665 12 m
(/"\(,)[ 7.709000 6.981000 7.462000 0.000000 ] xS
1 0 0 -1 113.01924 122.11938 cm
-21.059999 4.3180008 m
(*"+%,')[ 9.854000 6.981000 6.500000 4.095000 6.981000 0.000000 ] xS
1 w
1 J
1 j
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -2023 1002 cm
2229.6106 901.71436 m
2231.5012 890.79449 2231.1804 878.18915 2224.6309 866.88062 c
2219.1292 857.38159 2210.127 850.34161 2200.7014 845.19562 c
S
0 i
CM
170.49875 160.28459 m
176.3968 154.10292 l
179.00714 159.50534 l
h
170.49875 160.28459 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2023 1002 cm
2193.4988 841.71539 m
2199.3967 847.89709 l
2202.0071 842.49463 l
h
2193.4988 841.71539 m
S
/Cs2 SC
0 sc
1 0 0 -1 230.25961 119 cm
-21.059999 4.3180008 m
(*"+%,')[ 9.854000 6.981000 6.500000 4.095000 6.981000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -2023 1002 cm
2183 681 m
2197.678 702.8089 l
S
0 i
CM
179.14479 292.55423 m
177.16682 300.86612 l
172.18918 297.51602 l
h
179.14479 292.55423 m
f
0 J
0 j
1 0 0 -1 -2023 1002 cm
2202.1448 709.4458 m
2200.1667 701.13385 l
2195.1892 704.48395 l
h
2202.1448 709.4458 m
S
ep
end
%%Trailer
%%EOF
